// <auto-generated />
using System;
using AssetLibrary.Api.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AssetLibrary.Api.Migrations
{
    [DbContext(typeof(AssetLibraryDbContext))]
    [Migration("20220507135113_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("AssetLibrary.Api.Models.Entities.Scene", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("scene");
                });

            modelBuilder.Entity("AssetLibrary.Api.Models.Entities.SceneAsset", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<int?>("AssetType")
                        .HasColumnType("int")
                        .HasColumnName("assetType");

                    b.Property<string>("Data")
                        .HasColumnType("text")
                        .HasColumnName("data");

                    b.Property<int>("FileType")
                        .HasColumnType("int")
                        .HasColumnName("fileType");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("ParentId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("parentId");

                    b.Property<string>("SceneId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("sceneId");

                    b.HasKey("Id");

                    b.ToTable("sceneAsset");
                });

            modelBuilder.Entity("AssetLibrary.Api.Models.Entities.Tenant", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("userName");

                    b.HasKey("Id");

                    b.ToTable("tenant");

                    b.HasData(
                        new
                        {
                            Id = "ae8e0168-233f-41d4-b97d-772b9ba46522",
                            Password = "123456",
                            UserName = "admin1"
                        },
                        new
                        {
                            Id = "ae8e0168-233f-4b07-a4d4-ce184f48f9dd",
                            Password = "123456",
                            UserName = "admin2"
                        },
                        new
                        {
                            Id = "ae8e0168-233f-4329-bea0-08761f101f5f",
                            Password = "123456",
                            UserName = "admin3"
                        });
                });

            modelBuilder.Entity("AssetLibrary.Api.Models.SystemAsset", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<int?>("AssetType")
                        .HasColumnType("int")
                        .HasColumnName("assetType");

                    b.Property<string>("Data")
                        .HasColumnType("text")
                        .HasColumnName("data");

                    b.Property<int>("FileType")
                        .HasColumnType("int")
                        .HasColumnName("fileType");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("ParentId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("parentId");

                    b.HasKey("Id");

                    b.ToTable("systemAsset");

                    b.HasData(
                        new
                        {
                            Id = "ae8e0168-233e-45dc-bbd1-aeea35276a56",
                            AssetType = 2,
                            FileType = 2,
                            Name = "建筑"
                        },
                        new
                        {
                            Id = "ae8e0168-233f-4b58-a640-b80da4e5189a",
                            AssetType = 2,
                            Data = "住宅数据",
                            FileType = 2,
                            Name = "住宅",
                            ParentId = "ae8e0168-233e-45dc-bbd1-aeea35276a56"
                        },
                        new
                        {
                            Id = "ae8e0168-233f-40cd-802c-ed9fc0e35dde",
                            AssetType = 2,
                            Data = "商业数据",
                            FileType = 2,
                            Name = "商业",
                            ParentId = "ae8e0168-233e-45dc-bbd1-aeea35276a56"
                        },
                        new
                        {
                            Id = "ae8e0168-233f-42f0-8dca-1272993a6bbd",
                            AssetType = 2,
                            FileType = 2,
                            Name = "交通"
                        },
                        new
                        {
                            Id = "ae8e0168-233f-457e-b166-38c1905d57bd",
                            AssetType = 2,
                            Data = "信号灯数据",
                            FileType = 2,
                            Name = "信号灯",
                            ParentId = "ae8e0168-233f-42f0-8dca-1272993a6bbd"
                        },
                        new
                        {
                            Id = "ae8e0168-233f-42f7-9e02-52df303929d3",
                            AssetType = 2,
                            Data = "公交站数据",
                            FileType = 2,
                            Name = "公交站",
                            ParentId = "ae8e0168-233f-42f0-8dca-1272993a6bbd"
                        },
                        new
                        {
                            Id = "ae8e0168-233f-4ee0-8a43-fa289e38ce90",
                            AssetType = 2,
                            FileType = 2,
                            Name = "市政"
                        },
                        new
                        {
                            Id = "ae8e0168-233f-497a-b5ed-6f54d2cf391d",
                            AssetType = 2,
                            Data = "井盖数据",
                            FileType = 2,
                            Name = "井盖",
                            ParentId = "ae8e0168-233f-4ee0-8a43-fa289e38ce90"
                        },
                        new
                        {
                            Id = "ae8e0168-233f-40e2-9db9-9fcac4cd4589",
                            AssetType = 2,
                            Data = "售货机数据",
                            FileType = 2,
                            Name = "售货机",
                            ParentId = "ae8e0168-233f-4ee0-8a43-fa289e38ce90"
                        });
                });

            modelBuilder.Entity("AssetLibrary.Api.Models.TenantAsset", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("id");

                    b.Property<int?>("AssetType")
                        .HasColumnType("int")
                        .HasColumnName("assetType");

                    b.Property<string>("Data")
                        .HasColumnType("text")
                        .HasColumnName("data");

                    b.Property<int>("FileType")
                        .HasColumnType("int")
                        .HasColumnName("fileType");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("ParentId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("parentId");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("tenantId");

                    b.HasKey("Id");

                    b.ToTable("tenantAsset");
                });

            modelBuilder.Entity("AssetLibrary.Api.Models.Entities.Scene", b =>
                {
                    b.OwnsOne("AssetLibrary.Api.Models.CreationInfo", "CreationInfo", b1 =>
                        {
                            b1.Property<string>("SceneId")
                                .HasColumnType("varchar(36)");

                            b1.Property<DateTime>("CreationTime")
                                .HasColumnType("datetime")
                                .HasColumnName("creationTime");

                            b1.Property<string>("CreatorId")
                                .HasMaxLength(36)
                                .HasColumnType("varchar(36)")
                                .HasColumnName("creatorId");

                            b1.HasKey("SceneId");

                            b1.ToTable("scene");

                            b1.WithOwner()
                                .HasForeignKey("SceneId");
                        });

                    b.OwnsOne("AssetLibrary.Api.Models.ModificationInfo", "ModificationInfo", b1 =>
                        {
                            b1.Property<string>("SceneId")
                                .HasColumnType("varchar(36)");

                            b1.Property<DateTime>("ModificationTime")
                                .HasColumnType("datetime")
                                .HasColumnName("modificationTime");

                            b1.Property<string>("ModifierId")
                                .HasMaxLength(36)
                                .HasColumnType("varchar(36)")
                                .HasColumnName("modifierId");

                            b1.HasKey("SceneId");

                            b1.ToTable("scene");

                            b1.WithOwner()
                                .HasForeignKey("SceneId");
                        });

                    b.Navigation("CreationInfo");

                    b.Navigation("ModificationInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
